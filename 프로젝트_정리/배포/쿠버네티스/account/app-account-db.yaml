apiVersion: v1
kind: Service
metadata:
  name: account-db-server-service
  labels:
    app: account-db
    tier: database
spec:
  ports:
    - port: 8005
      targetPort: 3306
      name: db-port
  selector: # mysql Pod Should contain same labels
    app: account-db
    tier: database
  clusterIP: None # We Use DNS, Thus ClusterIP is not relevant
---
# Configure 'Deployment' of mysql server
apiVersion: apps/v1
kind: Deployment
metadata:
  name: account-db
  labels:
    app: account-db
    tier: database
spec:
  selector: # mysql Pod Should contain same labels
    matchLabels:
      app: account-db
      tier: database
  strategy:
    type: Recreate
  template:
    metadata:
      labels: # Must match 'Service' and 'Deployment' selectors
        app: account-db
        tier: database
    spec:
      containers:
        - image: mariadb # image from docker-hub
          # args:
          #   - "--ignore-db-dir=lost+found" # Workaround for https://github.com/docker-library/mysql/issues/186
          name: account-db
          env:
            - name: MYSQL_ROOT_PASSWORD
              value: root
            - name: MYSQL_USER
              value: planit
            - name: MYSQL_PASSWORD
              value: planit1234
            - name: MYSQL_DATABASE
              value: planit_account
          ports:
            - containerPort: 3306
              name: account-db
          volumeMounts: # Mounting voulume obtained from Persistent Volume Claim
            - name: account-db-persistent-storage
              mountPath: /var/lib/mysql #This is the path in the container on which the mounting will take place.
      volumes:
        - name: account-db-persistent-storage # Obtaining 'vloume' from PVC
          persistentVolumeClaim:
            claimName: account-db-pv-claim
